version: "3.8"
services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  postgres:
    image: postgres:16-alpine
    ports: ["5432:5432"]
    environment:
      - POSTGRES_DB=catalog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  opensearch:
    image: opensearchproject/opensearch:2.12.0
    ports: ["9200:9200"]
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=StrongPassword123!@#$%
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.12.0
    ports: ["5601:5601"]
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on: [opensearch]

  prometheus:
    image: prom/prometheus:latest
    ports: ["9090:9090"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-rules.yml:/etc/prometheus/alerts.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on: [alertmanager]

  alertmanager:
    image: prom/alertmanager:latest
    ports: ["9093:9093"]
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana:10.4.2
    ports: ["3000:3000"]
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./grafana-dashboards:/var/lib/grafana/dashboards:ro
    depends_on: [prometheus]

  # MSA Services
  auth-service:
    image: msa-webtoon/auth-service:latest
    ports: ["8105:8105"]

  api-gateway:
    image: msa-webtoon/api-gateway:latest
    ports: ["8088:8080"]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=change-me-very-long-secret-32bytes+
      - SERVICE_EVENT_INGEST_URL=http://event-ingest:8101
      - SERVICE_RANK_URL=http://rank-service:8102
      - SERVICE_CATALOG_URL=http://catalog-service:8103
      - SERVICE_SEARCH_URL=http://search-service:8104
    depends_on: [redis]

  event-ingest:
    image: msa-webtoon/event-ingest:latest
    ports: ["8101:8101"]
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - AUTH_JWKS_URI=http://auth-service:8105/.well-known/jwks.json
    depends_on: [kafka]

  rank-service:
    image: msa-webtoon/rank-service:latest
    ports: ["8102:8102"]
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - REDIS_URL=redis://redis:6379
      - AUTH_JWKS_URI=http://auth-service:8105/.well-known/jwks.json
    depends_on: [kafka, redis]

  catalog-service:
    image: msa-webtoon/catalog-service:latest
    ports: ["8103:8103"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/catalog
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP=kafka:9092
      - AUTH_JWKS_URI=http://auth-service:8105/.well-known/jwks.json
    depends_on: [postgres, kafka]

  search-service:
    image: msa-webtoon/search-service:latest
    ports: ["8104:8104"]
    environment:
      - OPENSEARCH_URL=http://opensearch:9200
      - KAFKA_BOOTSTRAP=kafka:9092
      - AUTH_JWKS_URI=http://auth-service:8105/.well-known/jwks.json
    depends_on: [opensearch, kafka]
