replicaCount: 2

image:
  repository: msa-webtoon/rank-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8082"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false

service:
  type: ClusterIP
  port: 8082

actuator:
  enabled: true
  port: 8082

livenessProbe:
  enabled: true
  path: /actuator/health/liveness
  port: http
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  path: /actuator/health/readiness
  port: http
  initialDelaySeconds: 60
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - rank-service
        topologyKey: kubernetes.io/hostname

env:
  SPRING_PROFILES_ACTIVE: "prod"
  SERVER_PORT: "8082"
  MANAGEMENT_SERVER_PORT: "8082"
  # Kafka Streams configuration
  SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"
  SPRING_KAFKA_STREAMS_APPLICATION_ID: "rank-service"
  SPRING_KAFKA_STREAMS_PROPERTIES_NUM_STREAM_THREADS: "4"
  SPRING_KAFKA_STREAMS_PROPERTIES_COMMIT_INTERVAL_MS: "1000"
  # Redis configuration
  SPRING_DATA_REDIS_HOST: "redis-service"
  SPRING_DATA_REDIS_PORT: "6379"
  # Ranking configuration
  RANK_WINDOW_SIZE_SECONDS: "60"
  RANK_WINDOW_TTL_SECONDS: "3600"
  RANK_AGGREGATE_READ_FACTOR: "3"
  # Logging
  LOGGING_LEVEL_ROOT: "INFO"
  LOGGING_LEVEL_COM_YOORDI: "INFO"
  LOGGING_LEVEL_ORG_APACHE_KAFKA_STREAMS: "WARN"

envSecrets: {}
  # AUTH_JWKS_URI:
  #   name: rank-service-secrets
  #   key: auth-jwks-uri

config: {}

volumes: []
volumeMounts: []
