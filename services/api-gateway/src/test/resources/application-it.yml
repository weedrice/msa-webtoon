spring:
  main:
    web-application-type: reactive
  cloud:
    gateway:
      httpclient:
        connect-timeout: 500
        response-timeout: 1s
      routes:
        - id: rank
          uri: ${SERVICE_RANK_URL:http://localhost:8102}
          order: -10000
          predicates:
            - Path=/rank/**
          filters:
            - name: CircuitBreaker
              args:
                name: rankCb
                fallbackUri: forward:/__fallback/rank
        - id: search
          uri: ${SERVICE_SEARCH_URL:http://localhost:8104}
          order: -10000
          predicates:
            - Path=/search/**
          filters:
            - name: CircuitBreaker
              args:
                name: searchCb
                fallbackUri: forward:/__fallback/search

resilience4j:
  timelimiter:
    instances:
      rankCb:
        timeoutDuration: 1s
        cancelRunningFuture: true
    configs:
      default:
        timeoutDuration: 1s
  circuitbreaker:
    instances:
      rankCb:
        recordExceptions:
          - java.util.concurrent.TimeoutException
          - java.net.SocketTimeoutException
          - io.netty.handler.timeout.ReadTimeoutException
          - io.netty.channel.ConnectTimeoutException
          - reactor.netty.http.client.PrematureCloseException
    circuitbreaker:
      timelimiter:
        enabled: true
      resilience4j:
        enabled: true
        timeLimiter:
          enabled: true

app:
  security:
    enabled: true
